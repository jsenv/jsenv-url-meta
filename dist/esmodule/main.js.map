{
  "version": 3,
  "file": "main.js",
  "sources": [
    "../../node_modules/@jsenv/core/helpers/babel/defineProperty/defineProperty.js",
    "../../node_modules/@jsenv/core/helpers/babel/objectSpread2/objectSpread2.js",
    "../../node_modules/@jsenv/core/helpers/babel/objectWithoutPropertiesLoose/objectWithoutPropertiesLoose.js",
    "../../node_modules/@jsenv/core/helpers/babel/objectWithoutProperties/objectWithoutProperties.js",
    "../../src/internal/assertUrlLike.js",
    "../../src/applyPatternMatching.js",
    "../../src/normalizeStructuredMetaMap.js",
    "../../node_modules/@jsenv/core/helpers/babel/typeof/typeof.js",
    "../../src/internal/isPlainObject.js",
    "../../src/internal/structuredMetaMapToMetaMap.js",
    "../../src/urlCanContainsMetaMatching.js",
    "../../src/urlToMeta.js"
  ],
  "sourcesContent": [
    "export default (obj, key, value) => {\n  // Shortcircuit the slow defineProperty path when possible.\n  // We are trying to avoid issues where setters defined on the\n  // prototype cause side effects under the fast path of simple\n  // assignment. By checking for existence of the property with\n  // the in operator, we can optimize most of this overhead away.\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true,\n    })\n  } else {\n    obj[key] = value\n  }\n  return obj\n}\n",
    "import defineProperty from \"../defineProperty/defineProperty.js\"\n\nexport default function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    // eslint-disable-next-line prefer-rest-params\n    var source = arguments[i] === null ? {} : arguments[i]\n    if (i % 2) {\n      // eslint-disable-next-line no-loop-func\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key])\n      })\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))\n    } else {\n      // eslint-disable-next-line no-loop-func\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))\n      })\n    }\n  }\n  return target\n}\n\n// This function is different to \"Reflect.ownKeys\". The enumerableOnly\n// filters on symbol properties only. Returned string properties are always\n// enumerable. It is good to use in objectSpread.\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object)\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object)\n    if (enumerableOnly)\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable\n      })\n    // eslint-disable-next-line prefer-spread\n    keys.push.apply(keys, symbols)\n  }\n  return keys\n}\n",
    "export default (source, excluded) => {\n  if (source === null) return {}\n  var target = {}\n  var sourceKeys = Object.keys(source)\n  var key\n  var i\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i]\n    if (excluded.indexOf(key) >= 0) continue\n    target[key] = source[key]\n  }\n  return target\n}\n",
    "import objectWithoutPropertiesLoose from \"../objectWithoutPropertiesLoose/objectWithoutPropertiesLoose.js\"\n\nexport default (source, excluded) => {\n  if (source === null) return {}\n\n  var target = objectWithoutPropertiesLoose(source, excluded)\n  var key\n  var i\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source)\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i]\n      if (excluded.indexOf(key) >= 0) continue\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue\n      target[key] = source[key]\n    }\n  }\n  return target\n}\n",
    "export const assertUrlLike = (value, name = \"url\") => {\n  if (typeof value !== \"string\") {\n    throw new TypeError(`${name} must be a url string, got ${value}`)\n  }\n  if (isWindowsPathnameSpecifier(value)) {\n    throw new TypeError(`${name} must be a url but looks like a windows pathname, got ${value}`)\n  }\n  if (!hasScheme(value)) {\n    throw new TypeError(`${name} must be a url and no scheme found, got ${value}`)\n  }\n}\n\nconst isWindowsPathnameSpecifier = (specifier) => {\n  const firstChar = specifier[0]\n  if (!/[a-zA-Z]/.test(firstChar)) return false\n  const secondChar = specifier[1]\n  if (secondChar !== \":\") return false\n  const thirdChar = specifier[2]\n  return thirdChar === \"/\" || thirdChar === \"\\\\\"\n}\n\nconst hasScheme = (specifier) => /^[a-zA-Z]+:/.test(specifier)\n",
    "// https://git-scm.com/docs/gitignore\n// https://github.com/kaelzhang/node-ignore\n\nimport { assertUrlLike } from \"./internal/assertUrlLike.js\"\n\nexport const applyPatternMatching = ({ pattern, url, ...rest } = {}) => {\n  assertUrlLike(pattern, \"pattern\")\n  assertUrlLike(url, \"url\")\n  if (Object.keys(rest).length) {\n    throw new Error(`received more parameters than expected.\n--- name of unexpected parameters ---\n${Object.keys(rest)}\n--- name of expected parameters ---\npattern, url`)\n  }\n  return applyMatching(pattern, url)\n}\n\nconst applyMatching = (pattern, string) => {\n  let patternIndex = 0\n  let index = 0\n  let remainingPattern = pattern\n  let remainingString = string\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    // pattern consumed and string consumed\n    if (remainingPattern === \"\" && remainingString === \"\") {\n      // pass because string fully matched pattern\n      return pass({\n        patternIndex,\n        index,\n      })\n    }\n\n    // pattern consumed, string not consumed\n    if (remainingPattern === \"\" && remainingString !== \"\") {\n      // fails because string longer than expected\n      return fail({\n        patternIndex,\n        index,\n      })\n    }\n\n    // from this point pattern is not consumed\n\n    // string consumed, pattern not consumed\n    if (remainingString === \"\") {\n      // pass because trailing \"**\" is optional\n      if (remainingPattern === \"**\") {\n        return pass({\n          patternIndex: patternIndex + 2,\n          index,\n        })\n      }\n      // fail because string shorted than expected\n      return fail({\n        patternIndex,\n        index,\n      })\n    }\n\n    // from this point pattern and string are not consumed\n\n    // fast path trailing slash\n    if (remainingPattern === \"/\") {\n      // pass because trailing slash matches remaining\n      if (remainingString[0] === \"/\") {\n        return pass({\n          patternIndex: patternIndex + 1,\n          index: string.length,\n        })\n      }\n\n      return fail({\n        patternIndex,\n        index,\n      })\n    }\n\n    // fast path trailing '**'\n    if (remainingPattern === \"**\") {\n      // pass because trailing ** matches remaining\n      return pass({\n        patternIndex: patternIndex + 2,\n        index: string.length,\n      })\n    }\n\n    // pattern leading **\n    if (remainingPattern.slice(0, 2) === \"**\") {\n      // consumes \"**\"\n      remainingPattern = remainingPattern.slice(2)\n      patternIndex += 2\n      if (remainingPattern[0] === \"/\") {\n        // consumes \"/\"\n        remainingPattern = remainingPattern.slice(1)\n        patternIndex += 1\n      }\n\n      // pattern ending with ** always match remaining string\n      if (remainingPattern === \"\") {\n        return pass({\n          patternIndex,\n          index: string.length,\n        })\n      }\n\n      const skipResult = skipUntilMatch({ pattern: remainingPattern, string: remainingString })\n\n      if (!skipResult.matched) {\n        return fail({\n          patternIndex: patternIndex + skipResult.patternIndex,\n          index: index + skipResult.index,\n        })\n      }\n\n      return pass({\n        patternIndex: pattern.length,\n        index: string.length,\n      })\n    }\n\n    if (remainingPattern[0] === \"*\") {\n      // consumes \"*\"\n      remainingPattern = remainingPattern.slice(1)\n      patternIndex += 1\n\n      // la c'est plus délicat, il faut que remainingString\n      // ne soit composé que de truc !== '/'\n      if (remainingPattern === \"\") {\n        const slashIndex = remainingString.indexOf(\"/\")\n        if (slashIndex > -1) {\n          return fail({\n            patternIndex,\n            index: index + slashIndex,\n          })\n        }\n        return pass({\n          patternIndex,\n          index: string.length,\n        })\n      }\n\n      // the next char must not the one expected by remainingPattern[0]\n      // because * is greedy and expect to skip one char\n      if (remainingPattern[0] === remainingString[0]) {\n        return fail({\n          patternIndex: patternIndex - \"*\".length,\n          index,\n        })\n      }\n\n      const skipResult = skipUntilMatch({\n        pattern: remainingPattern,\n        string: remainingString,\n        skippablePredicate: (remainingString) => remainingString[0] !== \"/\",\n      })\n\n      if (!skipResult.matched) {\n        return fail({\n          patternIndex: patternIndex + skipResult.patternIndex,\n          index: index + skipResult.index,\n        })\n      }\n\n      return pass({\n        patternIndex: pattern.length,\n        index: string.length,\n      })\n    }\n\n    if (remainingPattern[0] !== remainingString[0]) {\n      return fail({\n        patternIndex,\n        index,\n      })\n    }\n\n    // consumes next char\n    remainingPattern = remainingPattern.slice(1)\n    remainingString = remainingString.slice(1)\n    patternIndex += 1\n    index += 1\n    continue\n  }\n}\n\nconst skipUntilMatch = ({ pattern, string, skippablePredicate = () => true }) => {\n  let index = 0\n  let remainingString = string\n  let bestMatch = null\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const matchAttempt = applyMatching(pattern, remainingString)\n\n    if (matchAttempt.matched) {\n      bestMatch = matchAttempt\n      break\n    }\n\n    const skippable = skippablePredicate(remainingString)\n\n    bestMatch = fail({\n      patternIndex: bestMatch\n        ? Math.max(bestMatch.patternIndex, matchAttempt.patternIndex)\n        : matchAttempt.patternIndex,\n      index: index + matchAttempt.index,\n    })\n\n    if (!skippable) {\n      break\n    }\n\n    // search against the next unattempted string\n    remainingString = remainingString.slice(matchAttempt.index + 1)\n    index += matchAttempt.index + 1\n    if (remainingString === \"\") {\n      bestMatch = {\n        ...bestMatch,\n        index: string.length,\n      }\n      break\n    }\n\n    continue\n  }\n\n  return bestMatch\n}\n\nconst pass = ({ patternIndex, index }) => {\n  return {\n    matched: true,\n    index,\n    patternIndex,\n  }\n}\n\nconst fail = ({ patternIndex, index }) => {\n  return {\n    matched: false,\n    index,\n    patternIndex,\n  }\n}\n",
    "import { assertUrlLike } from \"./internal/assertUrlLike.js\"\n\nexport const normalizeStructuredMetaMap = (structuredMetaMap, url, ...rest) => {\n  assertUrlLike(url, \"url\")\n  if (rest.length) {\n    throw new Error(`received more arguments than expected.\n--- number of arguments received ---\n${2 + rest.length}\n--- number of arguments expected ---\n2`)\n  }\n\n  const structuredMetaMapNormalized = {}\n  Object.keys(structuredMetaMap).forEach((metaProperty) => {\n    const metaValueMap = structuredMetaMap[metaProperty]\n    const metaValueMapNormalized = {}\n    Object.keys(metaValueMap).forEach((pattern) => {\n      const metaValue = metaValueMap[pattern]\n      const specifierResolved = String(new URL(pattern, url))\n      metaValueMapNormalized[specifierResolved] = metaValue\n    })\n    structuredMetaMapNormalized[metaProperty] = metaValueMapNormalized\n  })\n  return structuredMetaMapNormalized\n}\n",
    "const nativeTypeOf = (obj) => typeof obj\n\nconst customTypeOf = (obj) => {\n  return obj &&\n    typeof Symbol === \"function\" &&\n    obj.constructor === Symbol &&\n    obj !== Symbol.prototype\n    ? \"symbol\"\n    : typeof obj\n}\n\nexport default typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\n  ? nativeTypeOf\n  : customTypeOf\n",
    "export const isPlainObject = (value) => {\n  if (value === null) {\n    return false\n  }\n  if (typeof value === \"object\") {\n    if (Array.isArray(value)) {\n      return false\n    }\n    return true\n  }\n  return false\n}\n",
    "import { isPlainObject } from \"./isPlainObject.js\"\n\nexport const structuredMetaMapToMetaMap = (structuredMetaMap, ...rest) => {\n  if (!isPlainObject(structuredMetaMap)) {\n    throw new TypeError(`structuredMetaMap must be a plain object, got ${structuredMetaMap}`)\n  }\n  if (rest.length) {\n    throw new Error(`received more arguments than expected.\n--- number of arguments received ---\n${1 + rest.length}\n--- number of arguments expected ---\n1`)\n  }\n\n  const metaMap = {}\n  Object.keys(structuredMetaMap).forEach((metaProperty) => {\n    const metaValueMap = structuredMetaMap[metaProperty]\n    if (!isPlainObject(metaValueMap)) {\n      throw new TypeError(\n        `metaValueMap must be plain object, got ${metaValueMap} for ${metaProperty}`,\n      )\n    }\n    Object.keys(metaValueMap).forEach((pattern) => {\n      const metaValue = metaValueMap[pattern]\n      const meta = { [metaProperty]: metaValue }\n      metaMap[pattern] = pattern in metaMap ? { ...metaMap[pattern], ...meta } : meta\n    })\n  })\n  return metaMap\n}\n",
    "import { assertUrlLike } from \"./internal/assertUrlLike.js\"\nimport { structuredMetaMapToMetaMap } from \"./internal/structuredMetaMapToMetaMap.js\"\nimport { applyPatternMatching } from \"./applyPatternMatching.js\"\n\nexport const urlCanContainsMetaMatching = ({ url, structuredMetaMap, predicate, ...rest }) => {\n  assertUrlLike(url, \"url\")\n  // the function was meants to be used on url ending with '/'\n  if (!url.endsWith(\"/\")) {\n    throw new Error(`url should end with /, got ${url}`)\n  }\n  if (typeof predicate !== \"function\") {\n    throw new TypeError(`predicate must be a function, got ${predicate}`)\n  }\n  if (Object.keys(rest).length) {\n    throw new Error(`received more parameters than expected.\n--- name of unexpected parameters ---\n${Object.keys(rest)}\n--- name of expected parameters ---\nurl, structuredMetaMap, predicate`)\n  }\n\n  const metaMap = structuredMetaMapToMetaMap(structuredMetaMap)\n\n  // for full match we must create an object to allow pattern to override previous ones\n  let fullMatchMeta = {}\n  let someFullMatch = false\n  // for partial match, any meta satisfying predicate will be valid because\n  // we don't know for sure if pattern will still match for a file inside pathname\n  const partialMatchMetaArray = []\n\n  Object.keys(metaMap).forEach((pattern) => {\n    const meta = metaMap[pattern]\n    const { matched, index } = applyPatternMatching({\n      pattern,\n      url,\n    })\n    if (matched) {\n      someFullMatch = true\n      fullMatchMeta = {\n        ...fullMatchMeta,\n        ...meta,\n      }\n    } else if (someFullMatch === false && index >= url.length) {\n      partialMatchMetaArray.push(meta)\n    }\n  })\n\n  if (someFullMatch) {\n    return Boolean(predicate(fullMatchMeta))\n  }\n\n  return partialMatchMetaArray.some((partialMatchMeta) => predicate(partialMatchMeta))\n}\n",
    "import { assertUrlLike } from \"./internal/assertUrlLike.js\"\nimport { structuredMetaMapToMetaMap } from \"./internal/structuredMetaMapToMetaMap.js\"\nimport { applyPatternMatching } from \"./applyPatternMatching.js\"\n\nexport const urlToMeta = ({ url, structuredMetaMap, ...rest } = {}) => {\n  assertUrlLike(url)\n  if (Object.keys(rest).length) {\n    throw new Error(`received more parameters than expected.\n--- name of unexpected parameters ---\n${Object.keys(rest)}\n--- name of expected parameters ---\nurl, structuredMetaMap`)\n  }\n\n  const metaMap = structuredMetaMapToMetaMap(structuredMetaMap)\n  return Object.keys(metaMap).reduce((previousMeta, pattern) => {\n    const { matched } = applyPatternMatching({\n      pattern,\n      url,\n    })\n    if (matched) {\n      const meta = metaMap[pattern]\n      return {\n        ...previousMeta,\n        ...meta,\n      }\n    }\n    return previousMeta\n  }, {})\n}\n"
  ],
  "names": [
    "obj",
    "key",
    "value",
    "Object",
    "defineProperty",
    "enumerable",
    "configurable",
    "writable",
    "target",
    "i",
    "arguments",
    "length",
    "source",
    "ownKeys",
    "forEach",
    "getOwnPropertyDescriptors",
    "defineProperties",
    "getOwnPropertyDescriptor",
    "object",
    "enumerableOnly",
    "keys",
    "getOwnPropertySymbols",
    "symbols",
    "filter",
    "sym",
    "push",
    "apply",
    "excluded",
    "sourceKeys",
    "indexOf",
    "objectWithoutPropertiesLoose",
    "sourceSymbolKeys",
    "prototype",
    "propertyIsEnumerable",
    "call",
    "assertUrlLike",
    "name",
    "TypeError",
    "isWindowsPathnameSpecifier",
    "hasScheme",
    "specifier",
    "firstChar",
    "test",
    "secondChar",
    "thirdChar",
    "applyPatternMatching",
    "pattern",
    "url",
    "rest",
    "Error",
    "applyMatching",
    "string",
    "patternIndex",
    "index",
    "remainingPattern",
    "remainingString",
    "pass",
    "fail",
    "slice",
    "skipResult",
    "skipUntilMatch",
    "matched",
    "slashIndex",
    "skippablePredicate",
    "bestMatch",
    "matchAttempt",
    "skippable",
    "Math",
    "max",
    "normalizeStructuredMetaMap",
    "structuredMetaMap",
    "structuredMetaMapNormalized",
    "metaProperty",
    "metaValueMap",
    "metaValueMapNormalized",
    "metaValue",
    "specifierResolved",
    "String",
    "URL",
    "nativeTypeOf",
    "customTypeOf",
    "Symbol",
    "constructor",
    "iterator",
    "isPlainObject",
    "Array",
    "isArray",
    "structuredMetaMapToMetaMap",
    "metaMap",
    "meta",
    "urlCanContainsMetaMatching",
    "predicate",
    "endsWith",
    "fullMatchMeta",
    "someFullMatch",
    "partialMatchMetaArray",
    "Boolean",
    "some",
    "partialMatchMeta",
    "urlToMeta",
    "reduce",
    "previousMeta"
  ],
  "mappings": "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"
}